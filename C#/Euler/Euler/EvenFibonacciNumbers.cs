using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Euler
{
    public class EvenFibonacciNumbers
    {
        /*
        Each new term in the Fibonacci sequence is generated by adding the previous two terms.
        By starting with 1 and 2, the first 10 terms will be:
            1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
        By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
            find the sum of the even-valued terms.
        */
        private int targetNumber = 4000000;

        /// <summary>
        /// 直接使用大量空间使用传统的方法计算斐波那契数，符合条件的加到结果中
        /// </summary>
        public long Solution1()
        {
            long[] arr = new long[40000];
            arr[0] = 1;
            arr[1] = 2;
            //上面的2要记得加上
            long result = 2;
            for (int i = 2; i < int.MaxValue; i++)
            {
                long sum = arr[i - 1] + arr[i - 2];

                if (sum <= targetNumber)
                {
                    arr[i] = sum;
                    if (Helper.IsEven(sum))
                    {
                        result += sum;
                    }
                }
                else
                {
                    break;
                }
            }

            return result;
        }

        //尝试改良空间的效率，改善程序逻辑
        public long Solution2()
        {
            long result = 0;

            long[] arr = new long[2];
            arr[0] = 1;
            arr[1] = 2;

            long currentNumber = arr[1];

            while (currentNumber <= targetNumber)
            {
                if (Helper.IsEven(currentNumber))
                {
                    result += currentNumber;
                }

                currentNumber = arr[0] + arr[1];
                arr[0] = arr[1];
                arr[1] = currentNumber;
            }

            return result;
        }
    }
}
